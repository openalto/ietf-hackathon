# Database type (mysql only)
DbType = mysql

# Database username
DbUserName = fts

# Database password
DbPassword = fts

# For MySQL, it has to follow the format 'host/db' (i.e. "mysql-server.example.com/fts3db")
DbConnectString = ftsdb/fts

# List of authorized VOs (separated by ;)
# Leave * to authorize any VO
AuthorizedVO = *

# The alias used for the FTS endpoint
# Note: will be published in the FTS Transfers Dashboard
Alias = rucio/fts

# Site name running the FTS3 service
SiteName = DOCKER

MinRequiredFreeRAM = 100
# MaxUrlCopyProcesses = 4

StagingBulkSize = 200
StagingWaitingFactor = 20

OptimizerInterval = 20

OptimizerEMAAlpha = 0.9

# OAuth2 parameters
ValidateAccessTokenOffline=True
JWKCacheSeconds=86400
TokenRefreshDaemonIntervalInSeconds=600

# Authorization roles
# Detailed roles syntax is explained in the FTS3 documentation (Installation Guide/FTS3)
[roles]
Public = all:transfer;all:config;all:datamanagement

[sqlalchemy]
pool_timeout = 10
pool_size = 10

# Logging configuration
[loggers]
keys = root, routes, fts3rest, sqlalchemy

[handlers]
keys = console, log_file

[formatters]
keys = generic

[logger_root]
level = INFO
handlers = log_file

[logger_routes]
level = INFO
handlers =
qualname = routes.middleware
# "level = DEBUG" logs the route matched and routing variables.

[logger_fts3rest]
level = INFO
handlers =
qualname = fts3rest

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine
# "level = INFO" logs SQL queries.
# "level = DEBUG" logs SQL queries and results.
# "level = WARN" logs neither.  (Recommended for production systems.)

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[handler_log_file]
class = logging.FileHandler
args = ('/var/log/fts3rest/fts3rest.log', 'a')
level = NOTSET
formatter = generic

[formatter_generic]
format = %(asctime)s,%(msecs)03d %(levelname)-5.5s [%(module)s] %(message)s
datefmt = %H:%M:%S

